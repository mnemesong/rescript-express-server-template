// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var SimpleLogger = require("../src/SimpleLogger.bs.js");
var ExpressServer = require("../src/ExpressServer.bs.js");
var ExpressDefaultServerConfigurator = require("../src/ExpressDefaultServerConfigurator.bs.js");

var ExpressDefaultServerConfigurator$1 = ExpressDefaultServerConfigurator.ExpressDefaultServerConfiguratorFactory(SimpleLogger.SimpleLogger);

function formHtml(method, path) {
  return "\r\n<h1>Test " + method + " form</h1>\r\n<form action=\"" + path + "\" method=\"" + method + "\">\r\n    <input name=\"textInp\" value=\"\" style=\"display: block;\">\r\n    <textarea name=\"textAr\" style=\"display: block;\"></textarea>\r\n    <input type=\"submit\" style=\"display: block;\">\r\n</form>\r\n";
}

var indexPageHtml = formHtml("get", "/apply-get");

var parseUnknownAsString = (function(val) {
        return (val && (typeof val === 'string'))
            ? val
            : null;
    });

var parseUnknownObjectProperty = (function(obj, prop, parser) {
        return (obj[prop]) ? parser(obj[prop]) : null;
    });

function parseFormValues(u) {
  return {
          textInp: parseUnknownObjectProperty(u, "textInp", parseUnknownAsString),
          textAr: parseUnknownObjectProperty(u, "textAr", parseUnknownAsString)
        };
}

var routes = [
  [
    "get",
    "/",
    {
      TAG: /* Default */1,
      _0: (function (param) {
          return {
                  TAG: /* OnlyResponse */0,
                  _0: {
                    TAG: /* Html */0,
                    _0: indexPageHtml
                  }
                };
        })
    }
  ],
  [
    "get",
    "/apply-get",
    {
      TAG: /* Default */1,
      _0: (function (req) {
          var reqVals = parseFormValues(req.queryParams);
          var result = JSON.stringify(reqVals);
          if (result !== undefined) {
            return {
                    TAG: /* OnlyResponse */0,
                    _0: {
                      TAG: /* Json */1,
                      _0: result
                    }
                  };
          } else {
            return {
                    TAG: /* OnlyResponse */0,
                    _0: {
                      TAG: /* Json */1,
                      _0: "{}"
                    }
                  };
          }
        })
    }
  ]
];

var serverConfig = Curry._3(ExpressDefaultServerConfigurator$1.buildConfig, routes, 80, (function (param) {
        console.log("Server had been started");
      }));

var ExpressServerTest2 = ExpressServer.ExpressServerFactory(SimpleLogger.SimpleLogger);

Curry._1(ExpressServerTest2.run, serverConfig);

exports.ExpressDefaultServerConfigurator = ExpressDefaultServerConfigurator$1;
exports.formHtml = formHtml;
exports.indexPageHtml = indexPageHtml;
exports.parseUnknownAsString = parseUnknownAsString;
exports.parseUnknownObjectProperty = parseUnknownObjectProperty;
exports.parseFormValues = parseFormValues;
exports.routes = routes;
exports.serverConfig = serverConfig;
exports.ExpressServerTest2 = ExpressServerTest2;
/* ExpressDefaultServerConfigurator Not a pure module */

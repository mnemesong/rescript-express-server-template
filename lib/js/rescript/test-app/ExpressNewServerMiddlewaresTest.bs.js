// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var ExpressHandler = require("../src/ExpressHandler.bs.js");
var ExpressNewServer = require("../src/ExpressNewServer.bs.js");
var ExpressHandlerMiddleware = require("../src/ExpressHandlerMiddleware.bs.js");
var ExpressFileHandlerConverter = require("../src/ExpressFileHandlerConverter.bs.js");
var ExpressSessionHandlerConverter = require("../src/ExpressSessionHandlerConverter.bs.js");
var ExpressParseUrlHandlerConverter = require("../src/ExpressParseUrlHandlerConverter.bs.js");
var ExpressParseJsonHandlerConverter = require("../src/ExpressParseJsonHandlerConverter.bs.js");

var QueryConverter = ExpressParseUrlHandlerConverter.Make(ExpressHandler.Default);

var QueryHandler = ExpressHandlerMiddleware.Make(ExpressHandler.Default, QueryConverter);

var JsonConverter = ExpressParseJsonHandlerConverter.Make(QueryHandler);

var JsonHandler = ExpressHandlerMiddleware.Make(QueryHandler, JsonConverter);

var SessionConverter = ExpressSessionHandlerConverter.Make(JsonHandler, ExpressSessionHandlerConverter.DefaultConfigurator);

var SessionHandler = ExpressHandlerMiddleware.Make(JsonHandler, SessionConverter);

function getFileAwaitFields(param) {
  return [{
            name: "fileInp",
            maxCount: 1
          }];
}

function getDestPath(param) {
  return "/uploads";
}

var FileParseConfig = {
  getFileAwaitFields: getFileAwaitFields,
  getDestPath: getDestPath
};

var FileConverter = ExpressFileHandlerConverter.Make(SessionHandler, FileParseConfig);

var FileHandler = ExpressHandlerMiddleware.Make(SessionHandler, FileConverter);

var OnlySessionConverter = ExpressSessionHandlerConverter.Make(ExpressHandler.Default, ExpressSessionHandlerConverter.DefaultConfigurator);

var OnlySessionHandler = ExpressHandlerMiddleware.Make(ExpressHandler.Default, OnlySessionConverter);

var testFilePath = (require('path').resolve(module.path, '..', '..', '..', '..', 'resources', 'test-file.txt'));

var indexPageHtml = "\r\n<form action=\"/apply-post\" method=\"post\" enctype=\"multipart/form-data\">\r\n    <h1>Test form</h1>\r\n    <input name=\"textInp\" value=\"\" style=\"display: block;\">\r\n    <textarea name=\"textAr\" style=\"display: block;\"></textarea>\r\n    <input type=\"file\" name=\"fileInp\" style=\"display: block;\">\r\n    <input type=\"submit\" style=\"display: block;\">\r\n</form>\r\n<hr>\r\n<div>\r\n    <button type=\"button\" onclick=\"window.open('/download-file');\">download file</button>\r\n    <button type=\"button\" onclick=\"window.open('/set-session');\">set session</button>\r\n    <button type=\"button\" onclick=\"window.open('/delete-session');\">delete session</button>\r\n</div>\r\n";

var stringifyAny = (function (u) {
    return u
        ? JSON.stringify(u)
        : ""
});

var routes = [
  /* Route */{
    _0: "get",
    _1: "/",
    _2: Curry._1(QueryHandler.handler, (function (r) {
            var unkToJson = (function(u) {
            return JSON.stringify(u) + ""
        });
            var urlDataStr = unkToJson(r._1);
            return {
                    TAG: /* Html */0,
                    _0: "Url data: " + urlDataStr + "<br><br>" + indexPageHtml
                  };
          }))
  },
  /* Route */{
    _0: "post",
    _1: "/apply-post",
    _2: Curry._1(FileHandler.handler, (function (r) {
            var match = r._0;
            var html = "\r\n        json: " + stringifyAny(match._0._1) + "<br>\r\n        session: " + stringifyAny(match._1) + "<br>\r\n        files: " + stringifyAny(r._1) + "\r\n        ";
            return /* SessionRes */{
                    _0: {
                      TAG: /* Html */0,
                      _0: html
                    },
                    _1: []
                  };
          }))
  },
  /* Route */{
    _0: "get",
    _1: "/download-file",
    _2: Curry._1(QueryHandler.handler, (function (param) {
            return {
                    TAG: /* DownloadFile */3,
                    _0: testFilePath
                  };
          }))
  },
  /* Route */{
    _0: "get",
    _1: "/show-session",
    _2: Curry._1(OnlySessionHandler.handler, (function (r) {
            var html = "session: " + stringifyAny(r._1);
            return /* SessionRes */{
                    _0: {
                      TAG: /* Html */0,
                      _0: html
                    },
                    _1: []
                  };
          }))
  },
  /* Route */{
    _0: "get",
    _1: "/set-session",
    _2: Curry._1(OnlySessionHandler.handler, (function (param) {
            return /* SessionRes */{
                    _0: {
                      TAG: /* Redirect */4,
                      _0: "/show-session",
                      _1: 302
                    },
                    _1: [/* SetSessionValue */{
                        _0: "a",
                        _1: 12
                      }]
                  };
          }))
  },
  /* Route */{
    _0: "get",
    _1: "/delete-session",
    _2: Curry._1(OnlySessionHandler.handler, (function (param) {
            return /* SessionRes */{
                    _0: {
                      TAG: /* Redirect */4,
                      _0: "/show-session",
                      _1: 302
                    },
                    _1: [/* DestroySession */0]
                  };
          }))
  }
];

ExpressNewServer.runServer(routes, [], 80, (function (param) {
        console.log("Server started!");
      }));

exports.QueryConverter = QueryConverter;
exports.QueryHandler = QueryHandler;
exports.JsonConverter = JsonConverter;
exports.JsonHandler = JsonHandler;
exports.SessionConverter = SessionConverter;
exports.SessionHandler = SessionHandler;
exports.FileParseConfig = FileParseConfig;
exports.FileConverter = FileConverter;
exports.FileHandler = FileHandler;
exports.OnlySessionConverter = OnlySessionConverter;
exports.OnlySessionHandler = OnlySessionHandler;
exports.testFilePath = testFilePath;
exports.indexPageHtml = indexPageHtml;
exports.stringifyAny = stringifyAny;
exports.routes = routes;
/* QueryConverter Not a pure module */

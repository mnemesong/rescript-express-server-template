// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var ExpressHandler = require("../src/ExpressHandler.bs.js");
var ExpressNewServer = require("../src/ExpressNewServer.bs.js");
var ExpressHandlerMiddleware = require("../src/ExpressHandlerMiddleware.bs.js");
var ExpressParseUrlHandlerConverter = require("../src/ExpressParseUrlHandlerConverter.bs.js");
var ExpressParseJsonHandlerConverter = require("../src/ExpressParseJsonHandlerConverter.bs.js");

var QueryConverter = ExpressParseUrlHandlerConverter.Make(ExpressHandler.Default);

var QueryHandler = ExpressHandlerMiddleware.Make(ExpressHandler.Default, QueryConverter);

var JsonConverter = ExpressParseJsonHandlerConverter.Make(QueryHandler);

var JsonHandler = ExpressHandlerMiddleware.Make(QueryHandler, JsonConverter);

var routes = [/* Route */{
    _0: "get",
    _1: "/",
    _2: Curry._1(JsonHandler.handler, (function (r) {
            var unkToJson = (function(u) {
            return JSON.stringify(u) + ""
        });
            var urlDataStr = unkToJson(r._0._1);
            return {
                    TAG: /* Html */0,
                    _0: "Url data: " + urlDataStr
                  };
          }))
  }];

ExpressNewServer.runServer(routes, [], 80, (function (param) {
        console.log("Server started!");
      }));

exports.QueryConverter = QueryConverter;
exports.QueryHandler = QueryHandler;
exports.JsonConverter = JsonConverter;
exports.JsonHandler = JsonHandler;
exports.routes = routes;
/* QueryConverter Not a pure module */

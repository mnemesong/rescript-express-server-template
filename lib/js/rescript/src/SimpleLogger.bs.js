// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Js_exn = require("rescript/lib/js/js_exn.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

function catchUnknown(riskF) {
  try {
    return {
            TAG: /* Ok */0,
            _0: Curry._1(riskF, undefined)
          };
  }
  catch (raw_obj){
    var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
    if (obj.RE_EXN_ID === Js_exn.$$Error) {
      return {
              TAG: /* Error */1,
              _0: obj._1
            };
    } else {
      return {
              TAG: /* Error */1,
              _0: Js_exn.raiseError("Unknown error")
            };
    }
  }
}

function logError(err) {
  console.log(err);
}

function mapResultError(r) {
  if (r.TAG === /* Ok */0) {
    return ;
  }
  console.log(r._0);
}

function handleResultError(r, handler) {
  if (r.TAG === /* Ok */0) {
    return ;
  } else {
    return Curry._1(handler, r._0);
  }
}

var raiseError = (function(err) {
            throw err;
        });

var SimpleLogger = {
  catchUnknown: catchUnknown,
  logError: logError,
  mapResultError: mapResultError,
  handleResultError: handleResultError,
  raiseError: raiseError
};

exports.SimpleLogger = SimpleLogger;
/* No side effect */

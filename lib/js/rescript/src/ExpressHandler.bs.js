// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");

var handleHtmlResp = (function(res, html) {
            res.setHeader('content-type', 'text/html');
            res.send(html);
        });

var handleJsonResp = (function(res, json) {
            res.setHeader('content-type', 'application/json');
            res.send(json);
        });

var handleOpenFileResp = (function(res, filePath) {
            res.sendFile(filePath);
        });

var handleDownloadFileResp = (function(res, filePath) {
            res.download(filePath);
        });

var hanleRedirectResp = (function(res, redirectPath, redirectStatus) {
            res.redirect(redirectStatus, redirectPath);
        });

var handleErrorResp = (function(res, msg, status) {
            res.status(status).send(msg);
        });

function wrapReq(param) {
  return [
          param[0],
          param[1]
        ];
}

function primalReq(hReq) {
  return hReq;
}

function applyRes(param, srt) {
  var res = param[1];
  switch (srt.TAG | 0) {
    case /* Html */0 :
        return handleHtmlResp(res, srt._0);
    case /* Json */1 :
        return handleJsonResp(res, srt._0);
    case /* OpenFile */2 :
        return handleOpenFileResp(res, srt._0);
    case /* DownloadFile */3 :
        return handleDownloadFileResp(res, srt._0);
    case /* Redirect */4 :
        return hanleRedirectResp(res, srt._0, srt._1);
    case /* Error */5 :
        return handleErrorResp(res, srt._0, srt._1);
    
  }
}

function convert(handler, req, res) {
  applyRes([
        req,
        res
      ], Curry._1(handler, [
            req,
            res
          ]));
}

var middlewares = [];

function handler(h) {
  return /* Handler */{
          _0: [],
          _1: (function (param, param$1) {
              return convert(h, param, param$1);
            })
        };
}

var Default = {
  wrapReq: wrapReq,
  applyRes: applyRes,
  primalReq: primalReq,
  convert: convert,
  middlewares: middlewares,
  handler: handler
};

exports.Default = Default;
/* No side effect */
